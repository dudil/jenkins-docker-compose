version: '3'

services:
  sonarqube:
    image: sonarqube:lts-community
    restart: unless-stopped
    environment: 
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
      SONAR_TELEMETRY_ENABLE: 'false'
    volumes: 
      - ./vols/sonarqube_data:/opt/sonarqube/data
      - ./vols/sonarqube_extensions:/opt/sonarqube/extensions
      - ./vols/sonarqube_logs:/opt/sonarqube/logs
      - ./vols/sonarqube_temp:/opt/sonarqube/temp
    ports: 
      - '9000:9000'
    networks: 
      - jenkins
  
  docker-agent:
    image: docker:dind
    depends_on: 
      - jenkins-bo
    restart: unless-stopped
    privileged: true
    command: --storage-driver=overlay2
    networks: 
      jenkins:
        aliases: 
          - docker
    environment: 
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - ./vols/jenkins-docker-certs:/certs/client
      - ./vols/jenkins-data:/var/jenkins_home
    ports:
      - '2376:2376'

  jenkins-bo:
    image: jenkins-blueocean
    build:
      context: ./jenkins-bo
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
    ports:
      - '8080:8080'
      - '50000:50000'
    user: jenkins:jenkins
    volumes: 
      - ./vols/jenkins-data:/var/jenkins_home
      - ./vols/jenkins-docker-certs:/certs/client:ro
      - ./jenkins-bo/jenkins-config.yaml:/var/casc_configs/jenkins-config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # - ${HOST_DEV_HOME}:/var/dev_home:ro
    networks: 
      - jenkins

networks:
  jenkins:
